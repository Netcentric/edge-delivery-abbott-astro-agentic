indices:
  products:
    target: /query-products.json
    include:
      - '/products/**'
    properties:
      name:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      recommended_dosage:
        select: main ul > li:first-child
        value: textContent(el)
      ingredients_names:
        select: .specifications > div > div:first-child
        values: textContent(el)
      ingredients_amounts:
        select: .specifications > div > div:last-child
        values: textContent(el)
      image: 
        select: head > meta[property="og:image"]
        value: attribute(el, "content")
      properties: 
        select: head > meta[property="og:description"]
        value: attribute(el, "content")
      brand: 
        select: head > meta[name="brand"]
        value: attribute(el, "content")
      special_needs: 
        select: head > meta[name="special_needs"]
        value: attribute(el, "content")
      purpose: 
        select: head > meta[name="purpose"]
        value: attribute(el, "content")
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
  segments:
    target: /query-segments.json
    include:
      - '/segments/**'
    properties:
      name:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      description:
        select: head > meta[property="og:description"]
        value: attribute(el, "content")
      image: 
        select: head > meta[property="og:image"]
        value: attribute(el, "content")
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
  regions:
    target: /query-regions.json
    include:
      - '/regions/**'
    properties:
      name:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      image: 
        select: head > meta[property="og:image"]
        value: attribute(el, "content")
      specs: 
        select: h1 ~ p
        values: innerHTML(el)
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
